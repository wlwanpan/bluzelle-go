// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bluzelle.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BznEnvelope struct {
	Sender    string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*BznEnvelope_DatabaseMsg
	//	*BznEnvelope_PbftInternalRequest
	//	*BznEnvelope_DatabaseResponse
	//	*BznEnvelope_Json
	//	*BznEnvelope_Audit
	//	*BznEnvelope_Pbft
	//	*BznEnvelope_PbftMembership
	//	*BznEnvelope_StatusRequest
	//	*BznEnvelope_StatusResponse
	Payload              isBznEnvelope_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BznEnvelope) Reset()         { *m = BznEnvelope{} }
func (m *BznEnvelope) String() string { return proto.CompactTextString(m) }
func (*BznEnvelope) ProtoMessage()    {}
func (*BznEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_37e4e006cca7cf40, []int{0}
}

func (m *BznEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BznEnvelope.Unmarshal(m, b)
}
func (m *BznEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BznEnvelope.Marshal(b, m, deterministic)
}
func (m *BznEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BznEnvelope.Merge(m, src)
}
func (m *BznEnvelope) XXX_Size() int {
	return xxx_messageInfo_BznEnvelope.Size(m)
}
func (m *BznEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_BznEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_BznEnvelope proto.InternalMessageInfo

func (m *BznEnvelope) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *BznEnvelope) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BznEnvelope) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type isBznEnvelope_Payload interface {
	isBznEnvelope_Payload()
}

type BznEnvelope_DatabaseMsg struct {
	DatabaseMsg []byte `protobuf:"bytes,10,opt,name=database_msg,json=databaseMsg,proto3,oneof"`
}

type BznEnvelope_PbftInternalRequest struct {
	PbftInternalRequest []byte `protobuf:"bytes,11,opt,name=pbft_internal_request,json=pbftInternalRequest,proto3,oneof"`
}

type BznEnvelope_DatabaseResponse struct {
	DatabaseResponse []byte `protobuf:"bytes,12,opt,name=database_response,json=databaseResponse,proto3,oneof"`
}

type BznEnvelope_Json struct {
	Json []byte `protobuf:"bytes,13,opt,name=json,proto3,oneof"`
}

type BznEnvelope_Audit struct {
	Audit []byte `protobuf:"bytes,14,opt,name=audit,proto3,oneof"`
}

type BznEnvelope_Pbft struct {
	Pbft []byte `protobuf:"bytes,15,opt,name=pbft,proto3,oneof"`
}

type BznEnvelope_PbftMembership struct {
	PbftMembership []byte `protobuf:"bytes,16,opt,name=pbft_membership,json=pbftMembership,proto3,oneof"`
}

type BznEnvelope_StatusRequest struct {
	StatusRequest []byte `protobuf:"bytes,17,opt,name=status_request,json=statusRequest,proto3,oneof"`
}

type BznEnvelope_StatusResponse struct {
	StatusResponse []byte `protobuf:"bytes,18,opt,name=status_response,json=statusResponse,proto3,oneof"`
}

func (*BznEnvelope_DatabaseMsg) isBznEnvelope_Payload() {}

func (*BznEnvelope_PbftInternalRequest) isBznEnvelope_Payload() {}

func (*BznEnvelope_DatabaseResponse) isBznEnvelope_Payload() {}

func (*BznEnvelope_Json) isBznEnvelope_Payload() {}

func (*BznEnvelope_Audit) isBznEnvelope_Payload() {}

func (*BznEnvelope_Pbft) isBznEnvelope_Payload() {}

func (*BznEnvelope_PbftMembership) isBznEnvelope_Payload() {}

func (*BznEnvelope_StatusRequest) isBznEnvelope_Payload() {}

func (*BznEnvelope_StatusResponse) isBznEnvelope_Payload() {}

func (m *BznEnvelope) GetPayload() isBznEnvelope_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BznEnvelope) GetDatabaseMsg() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_DatabaseMsg); ok {
		return x.DatabaseMsg
	}
	return nil
}

func (m *BznEnvelope) GetPbftInternalRequest() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_PbftInternalRequest); ok {
		return x.PbftInternalRequest
	}
	return nil
}

func (m *BznEnvelope) GetDatabaseResponse() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_DatabaseResponse); ok {
		return x.DatabaseResponse
	}
	return nil
}

func (m *BznEnvelope) GetJson() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_Json); ok {
		return x.Json
	}
	return nil
}

func (m *BznEnvelope) GetAudit() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_Audit); ok {
		return x.Audit
	}
	return nil
}

func (m *BznEnvelope) GetPbft() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_Pbft); ok {
		return x.Pbft
	}
	return nil
}

func (m *BznEnvelope) GetPbftMembership() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_PbftMembership); ok {
		return x.PbftMembership
	}
	return nil
}

func (m *BznEnvelope) GetStatusRequest() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_StatusRequest); ok {
		return x.StatusRequest
	}
	return nil
}

func (m *BznEnvelope) GetStatusResponse() []byte {
	if x, ok := m.GetPayload().(*BznEnvelope_StatusResponse); ok {
		return x.StatusResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BznEnvelope) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BznEnvelope_DatabaseMsg)(nil),
		(*BznEnvelope_PbftInternalRequest)(nil),
		(*BznEnvelope_DatabaseResponse)(nil),
		(*BznEnvelope_Json)(nil),
		(*BznEnvelope_Audit)(nil),
		(*BznEnvelope_Pbft)(nil),
		(*BznEnvelope_PbftMembership)(nil),
		(*BznEnvelope_StatusRequest)(nil),
		(*BznEnvelope_StatusResponse)(nil),
	}
}

func init() {
	proto.RegisterType((*BznEnvelope)(nil), "pb.bzn_envelope")
}

func init() { proto.RegisterFile("bluzelle.proto", fileDescriptor_37e4e006cca7cf40) }

var fileDescriptor_37e4e006cca7cf40 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0x41, 0x4e, 0xeb, 0x30,
	0x10, 0x86, 0x5f, 0xda, 0xbe, 0xa2, 0x4e, 0xd3, 0xb4, 0x35, 0x50, 0x79, 0xc1, 0xa2, 0x82, 0x05,
	0xed, 0x02, 0x36, 0x70, 0x02, 0x56, 0xb0, 0xe8, 0x26, 0x17, 0x88, 0x6c, 0x65, 0x28, 0x41, 0x89,
	0x6d, 0x3c, 0x0e, 0x12, 0x3d, 0x1a, 0xa7, 0x43, 0x4e, 0xec, 0x74, 0xf9, 0xff, 0xdf, 0x37, 0x93,
	0x8c, 0x0c, 0x99, 0xac, 0xdb, 0x13, 0xd6, 0x35, 0x3e, 0x1a, 0xab, 0x9d, 0x66, 0x23, 0x23, 0x6f,
	0x7f, 0xc7, 0x90, 0xca, 0x93, 0x2a, 0x50, 0x7d, 0x63, 0xad, 0x0d, 0xb2, 0x0d, 0x4c, 0x09, 0x55,
	0x89, 0x96, 0x27, 0xdb, 0x64, 0x37, 0xcb, 0x43, 0x62, 0x37, 0x30, 0xa3, 0xea, 0xa8, 0x84, 0x6b,
	0x2d, 0xf2, 0xd1, 0x36, 0xd9, 0xa5, 0xf9, 0xb9, 0xf0, 0xd4, 0x55, 0x0d, 0x92, 0x13, 0x8d, 0xe1,
	0xe3, 0x6d, 0xb2, 0x9b, 0xe4, 0xe7, 0x82, 0xdd, 0x41, 0x5a, 0x0a, 0x27, 0xa4, 0x20, 0x2c, 0x1a,
	0x3a, 0x72, 0xf0, 0xe3, 0xaf, 0xff, 0xf2, 0x79, 0x6c, 0x0f, 0x74, 0x64, 0xcf, 0x70, 0x6d, 0xe4,
	0xbb, 0x2b, 0x2a, 0xe5, 0xd0, 0x2a, 0x51, 0x17, 0x16, 0xbf, 0x5a, 0x24, 0xc7, 0xe7, 0xc1, 0xbe,
	0xf4, 0xf8, 0x2d, 0xd0, 0xbc, 0x87, 0xec, 0x01, 0xd6, 0xc3, 0x6a, 0x8b, 0x64, 0xb4, 0x22, 0xe4,
	0x69, 0x98, 0x58, 0x45, 0x94, 0x07, 0xc2, 0xae, 0x60, 0xf2, 0x49, 0x5a, 0xf1, 0x45, 0x30, 0xba,
	0xc4, 0x36, 0xf0, 0x5f, 0xb4, 0x65, 0xe5, 0x78, 0x16, 0xea, 0x3e, 0x7a, 0xdb, 0x7f, 0x93, 0x2f,
	0xa3, 0xed, 0x13, 0xdb, 0xc3, 0xb2, 0xfb, 0xd1, 0x06, 0x1b, 0x89, 0x96, 0x3e, 0x2a, 0xc3, 0x57,
	0x41, 0xc8, 0x3c, 0x38, 0x0c, 0x3d, 0xbb, 0x87, 0x8c, 0x9c, 0x70, 0x2d, 0x0d, 0xc7, 0xac, 0x83,
	0xb9, 0xe8, 0xfb, 0x78, 0xc6, 0x1e, 0x96, 0x83, 0x18, 0x8e, 0x60, 0x71, 0x67, 0x34, 0xfb, 0xfe,
	0x65, 0x06, 0x17, 0x46, 0xfc, 0xd4, 0x5a, 0x94, 0x72, 0xda, 0xbd, 0xe3, 0xd3, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x2a, 0x6b, 0x5a, 0xa5, 0xd9, 0x01, 0x00, 0x00,
}
